<?php

namespace Vdvcoder\Payment\app;

use Illuminate\Database\Eloquent\Model;
use Mollie\Api\Resources\Payment as MolliePayment;
use Mollie\Laravel\Facades\Mollie;

class Payment extends Model
{
    protected $guarded = ['id'];
    
    protected $dates = [
        'paid_at'
    ];

    public function payable()
    {
        return $this->morphTo();
    }

    public function getRouteKeyName()
    {
        return "uuid"; // TODO: Change the autogenerated stub
    }

    public function getCheckoutURL()
    {
        if ($this->payment_provider === "Mollie") {
            return $this->api()->getCheckoutUrl();
        }

        throw new \Exception("This provider [{$this->payment_provider}] is unknown.");
    }

    public function api(): MolliePayment
    {
        if ($this->payment_provider === "Mollie") {
            return Mollie::api()->payments()->get($this->payment_id);
        }

        throw new \Exception("This provider [{$this->payment_provider}] is unknown.");
    }

    public function item(): ?Model
    {
        if (!$this->item_model || !$this->item_model_id) {
            return false;
        }

        if (!class_exists($this->item_model)) {
            return false;
        }

        return $this->item_model::where('id', $this->item_model_id)->first();
    }

    public function user(): ?Model
    {
        if (!$this->user_model || !$this->user_model_id) {
            return false;
        }

        if (!class_exists($this->user_model)) {
            return false;
        }

        return $this->user_model::where('id', $this->user_model_id)->first();
    }
}
